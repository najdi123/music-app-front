{"ast":null,"code":"import _slicedToArray from \"C:\\\\30\\\\music-app\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\30\\\\music-app\\\\client\\\\src\\\\components\\\\songs\\\\UploadSong.js\";\nimport React, { useState } from 'react';\nimport Axios from \"axios\";\n\nconst Upload = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        songName = _useState2[0],\n        setSongName = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        singer = _useState4[0],\n        setSinger = _useState4[1];\n\n  const _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        songFile = _useState6[0],\n        setSongFile = _useState6[1];\n\n  const _useState7 = useState({}),\n        _useState8 = _slicedToArray(_useState7, 2),\n        photo = _useState8[0],\n        setPhoto = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        success = _useState10[0],\n        setSuccess = _useState10[1];\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const data = new FormData();\n    data.append(\"songName\", songName);\n    data.append(\"singer\", singer);\n    data.append(\"songURL\", songFile);\n    data.append(\"imageURL\", photo);\n    Axios.post(\"http://localhost:5000/api/addSong\", data, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(res => {\n      console.log(res.data);\n      console.log('yes');\n      setSuccess(true);\n    });\n  };\n\n  const handleSelectedSongFile = e => {\n    setSongFile(e.target.files[0]);\n  };\n\n  const handleSelectedPhoto = e => {\n    setPhoto(e.target.files[0]);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, success ? React.createElement(\"div\", {\n    className: \"alert alert-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"'Song was uploaded successfully'\") : '', React.createElement(\"form\", {\n    encType: \"multipart/form-data\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"btn-block\",\n    placeholder: \" \\u0627\\u0633\\u0645 \\u0622\\u0647\\u0646\\u06AF\",\n    type: \"text\",\n    name: \"song\",\n    onChange: e => setSongName(e.target.value),\n    value: songName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"btn-block\",\n    placeholder: \" \\u0627\\u06CC\\u0645 \\u062E\\u0648\\u0627\\u0646\\u0646\\u062F\\u0647\",\n    type: \"text\",\n    name: \"singer\",\n    onChange: e => setSinger(e.target.value),\n    value: singer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"custom-file was-validated mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"custom-file-label\",\n    htmlFor: \"validatedCustomFile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"\\u0641\\u0627\\u06CC\\u0644 \\u0645\\u0648\\u0632\\u06CC\\u06A9\"), React.createElement(\"input\", {\n    placeholder: \"Music file\",\n    type: \"file\",\n    name: \"song\",\n    onChange: handleSelectedSongFile,\n    className: \"custom-file-input\",\n    id: \"validatedCustomFile\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Pick an audio or mp3 file no bigger than 15mb\")), React.createElement(\"div\", {\n    className: \"custom-file was-validated mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"custom-file-label\",\n    htmlFor: \"validatedCustomFile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Cover Photo\"), React.createElement(\"input\", {\n    placeholder: \"Cover Photo\",\n    type: \"file\",\n    name: \"photo\",\n    onChange: handleSelectedPhoto,\n    className: \"custom-file-input\",\n    id: \"validatedCustomFile\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Pick an image which is jpeg or png and not bigger than 5mb\")), React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nexport default Upload;","map":{"version":3,"sources":["C:/30/music-app/client/src/components/songs/UploadSong.js"],"names":["React","useState","Axios","Upload","songName","setSongName","singer","setSinger","songFile","setSongFile","photo","setPhoto","success","setSuccess","handleSubmit","e","preventDefault","data","FormData","append","post","headers","then","res","console","log","handleSelectedSongFile","target","files","handleSelectedPhoto","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Axios from \"axios\";\r\n\r\nconst Upload = () =>{\r\n\r\n    const [songName, setSongName] = useState(\"\");\r\n    const [singer, setSinger] = useState(\"\");\r\n    const [songFile, setSongFile] = useState({});\r\n    const [photo, setPhoto] = useState({});\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const data = new FormData();\r\n\r\n        data.append(\"songName\", songName);\r\n        data.append(\"singer\", singer);\r\n        data.append(\"songURL\", songFile);\r\n        data.append(\"imageURL\", photo);\r\n\r\n        Axios.post(\"http://localhost:5000/api/addSong\", data, {\r\n            headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        }).then(res => {\r\n            console.log(res.data);\r\n            console.log('yes')\r\n            setSuccess(true)\r\n        });\r\n    };\r\n\r\n    const handleSelectedSongFile = e => {\r\n        setSongFile(e.target.files[0]);\r\n    };\r\n    const handleSelectedPhoto = e => {\r\n        setPhoto(e.target.files[0]);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n\r\n                {success ? <div className=\"alert alert-success\">'Song was uploaded successfully'</div> : ''}\r\n\r\n            <form encType=\"multipart/form-data\" onSubmit={handleSubmit}>\r\n                {/*<label htmlFor=\"name\">Name: </label>*/}\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        className=\"btn-block\"\r\n                        placeholder=\" اسم آهنگ\"\r\n                        type=\"text\"\r\n                        name=\"song\"\r\n                        onChange={e => setSongName(e.target.value)}\r\n                        value={songName}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        className=\"btn-block\"\r\n                        placeholder=\" ایم خواننده\"\r\n                        type=\"text\"\r\n                        name=\"singer\"\r\n                        onChange={e => setSinger(e.target.value)}\r\n                        value={singer}\r\n                    />\r\n                </div>\r\n\r\n                {/*<label htmlFor=\"file\">File: </label>*/}\r\n                <div className=\"custom-file was-validated mb-3\">\r\n                    <label className=\"custom-file-label\" htmlFor=\"validatedCustomFile\">فایل موزیک</label>\r\n                    <input\r\n                        placeholder=\"Music file\"\r\n                        type=\"file\"\r\n                        name=\"song\"\r\n                        onChange={handleSelectedSongFile}\r\n                        className=\"custom-file-input\"\r\n                        id=\"validatedCustomFile\"\r\n                        required\r\n                    />\r\n                    <div className=\"invalid-feedback\">Pick an audio or mp3 file no bigger than 15mb</div>\r\n                </div>\r\n\r\n                <div className=\"custom-file was-validated mb-3\">\r\n                    <label className=\"custom-file-label\" htmlFor=\"validatedCustomFile\">Cover Photo</label>\r\n                    <input\r\n                        placeholder=\"Cover Photo\"\r\n                        type=\"file\"\r\n                        name=\"photo\"\r\n                        onChange={handleSelectedPhoto}\r\n                        className=\"custom-file-input\"\r\n                        id=\"validatedCustomFile\"\r\n                        required\r\n\r\n                    />\r\n                    <div className=\"invalid-feedback\">Pick an image which is jpeg or png and not bigger than 5mb</div>\r\n                </div>\r\n\r\n                <button\r\n                    className=\"btn btn-primary btn-block\"\r\n                    type=\"submit\"\r\n                >Submit</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Upload;"]},"metadata":{},"sourceType":"module"}