{"ast":null,"code":"import _slicedToArray from \"C:\\\\30\\\\music-app\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\30\\\\music-app\\\\client\\\\src\\\\components\\\\songs\\\\SingleSong.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router';\nimport ReactPlayer from 'react-player';\nimport './DisplaySongs.css';\nimport OtherSongsFromSinger from \"./OtherSongsFromSinger\";\nimport loggedReducer from \"../../reducers/isSigned\";\n\nconst DisplaySongs = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        data2 = _useState4[0],\n        setData2 = _useState4[1]; // const [loading, setLoading] = useState(true)\n\n\n  let location = useLocation(); // console.log(location.state.songId);\n\n  const songId = useLocation().state.songId.toString();\n  useEffect(() => {\n    fetch(`http://localhost:5000/api/showSong/${songId}`).then(res => res.json()).then(res => setData(res)) // .then(\n    //     fetch(`http://localhost:5000/api/showSongsBySinger/singer?singer=Mohi`)\n    //         .then(res => res.json())\n    //         .then(data2 => (setData2(data2.reverse())), console.log(data2))\n    //         .catch(err => console.log(err))\n    // )\n    .catch(err => console.log(err));\n    getSingersOtherSongs();\n  }, [songId]);\n\n  const getSingersOtherSongs = () => {// useEffect(() => {\n    //\n    //     fetch('http://localhost:5000/api/showSongsBySinger/singer?singer=Oliver Tree')\n    //         .then(res => res.json())\n    //         .then(data2 => (setData2(data2.reverse())))\n    //         .catch(err => console.log(err))\n    //\n    // }, [])\n  };\n\n  return React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"bg-light mb-5 mt-5 container \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"text-center pt-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \" \", data.songName, \" \\u0622\\u0647\\u0646\\u06AF \\u062C\\u062F\\u06CC\\u062F \"), React.createElement(\"p\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \" \", data.singer, \" \\u0627\\u0632\"), React.createElement(\"img\", {\n    width: \"100%\",\n    src: \"http://localhost:5000/\" + data.imageURL,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"a\", {\n    target: \"_blank\",\n    href: \"http://localhost:5000/\" + data.songURL,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"\\u062F\\u0627\\u0646\\u0644\\u0648\\u062F\")), React.createElement(ReactPlayer, {\n    url: \"http://localhost:5000/\" + data.songURL,\n    playing: false,\n    controls: true,\n    light: false,\n    height: 40,\n    width: '100%',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, data.views, \" views\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"category: \", data.category)), React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(OtherSongsFromSinger, {\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })));\n};\n\nexport default DisplaySongs;","map":{"version":3,"sources":["C:/30/music-app/client/src/components/songs/SingleSong.js"],"names":["React","useState","useEffect","useLocation","ReactPlayer","OtherSongsFromSinger","loggedReducer","DisplaySongs","data","setData","data2","setData2","location","songId","state","toString","fetch","then","res","json","catch","err","console","log","getSingersOtherSongs","songName","singer","imageURL","songURL","views","category"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\nimport { useLocation} from 'react-router';\r\n\r\nimport ReactPlayer from 'react-player';\r\nimport './DisplaySongs.css';\r\nimport OtherSongsFromSinger from \"./OtherSongsFromSinger\";\r\nimport loggedReducer from \"../../reducers/isSigned\";\r\n\r\n\r\nconst DisplaySongs = () => {\r\n    const [data, setData] = useState([]);\r\n    const [data2, setData2] = useState([]);\r\n    // const [loading, setLoading] = useState(true)\r\n\r\n    let location = useLocation();\r\n    // console.log(location.state.songId);\r\n    const songId = useLocation().state.songId.toString();\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:5000/api/showSong/${songId}`)\r\n            .then(res => res.json())\r\n            .then(res => setData(res))\r\n            // .then(\r\n            //     fetch(`http://localhost:5000/api/showSongsBySinger/singer?singer=Mohi`)\r\n            //         .then(res => res.json())\r\n            //         .then(data2 => (setData2(data2.reverse())), console.log(data2))\r\n            //         .catch(err => console.log(err))\r\n            // )\r\n            .catch(err => console.log(err));\r\n        getSingersOtherSongs();\r\n\r\n    },[songId]);\r\n\r\n    const getSingersOtherSongs = () => {\r\n        // useEffect(() => {\r\n        //\r\n        //     fetch('http://localhost:5000/api/showSongsBySinger/singer?singer=Oliver Tree')\r\n        //         .then(res => res.json())\r\n        //         .then(data2 => (setData2(data2.reverse())))\r\n        //         .catch(err => console.log(err))\r\n        //\r\n        // }, [])\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"\">\r\n\r\n\r\n            <div className=\"bg-light mb-5 mt-5 container \">\r\n\r\n                <p className=\"text-center pt-2\"> {data.songName} آهنگ جدید </p>\r\n                <p className=\"text-center\"> {data.singer} از</p>\r\n                <img width=\"100%\" src={\"http://localhost:5000/\" + data.imageURL} alt=\"\"/>\r\n                <a target=\"_blank\" href={\"http://localhost:5000/\" + data.songURL}><p\r\n                    className=\"text-center\">دانلود</p></a>\r\n                <ReactPlayer\r\n                    url={\"http://localhost:5000/\" + data.songURL}\r\n                    playing={false}\r\n                    controls={true}\r\n                    light={false}\r\n                    height={40}\r\n                    width={'100%'}\r\n                />\r\n                <p>{data.views} views</p>\r\n                <p>category: {data.category}</p>\r\n            </div>\r\n\r\n            <div className=\"\">\r\n\r\n                <OtherSongsFromSinger data={data}/>\r\n\r\n                {/*{data2.map((item, i) =>*/}\r\n                {/*    <div key={i} >*/}\r\n                {/*        <img src={\"http://localhost:5000/\"+item.imageURL} alt={item.songName}  className=\"songImage\"/>*/}\r\n                {/*        <div className=\" text-center d-block\">*/}\r\n                {/*            <h5>{item.songName}</h5>*/}\r\n                {/*            <p>{item.singer}</p>*/}\r\n                {/*        </div>*/}\r\n                {/*    </div>*/}\r\n                {/*)}*/}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DisplaySongs;"]},"metadata":{},"sourceType":"module"}