{"ast":null,"code":"import _slicedToArray from \"C:\\\\30\\\\music-app\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\30\\\\music-app\\\\client\\\\src\\\\components\\\\songs\\\\SingleSong.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router';\nimport ReactPlayer from 'react-player';\nimport './DisplaySongs.css';\nimport OtherSongsFromSinger from \"./OtherSongsFromSinger\";\nimport { Link } from \"react-router-dom\";\nimport loggedReducer from \"../../reducers/isSigned\";\n\nconst DisplaySongs = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState({\n    songName: '',\n    singer: '',\n    imageURL: '',\n    songURL: '',\n    views: '',\n    likes: ''\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        data3 = _useState4[0],\n        setData3 = _useState4[1];\n\n  const _useState5 = useState({\n    likesNumber: '',\n    error: ''\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        likes = _useState6[0],\n        setLikes = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        error = _useState8[0],\n        setEroor = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        commentText = _useState10[0],\n        setCommentText = _useState10[1]; // const [data2, setData2] = useState([]);\n  // const [loading, setLoading] = useState(true)\n  // let location = useLocation();\n  // console.log(location.state.songId);\n\n\n  const songId = useLocation().state.songId.toString();\n  useEffect(() => {\n    const fetchData = async () => {\n      console.log('async fetch data1');\n      let res = await fetch(`http://localhost:5000/api/showSong/${songId}`);\n      let response = await res.json();\n      setData(response);\n      setData3({\n        songName: response.songName,\n        singer: response.singer,\n        imageURL: response.imageURL,\n        songURL: response.songURL,\n        category: response.category,\n        views: response.views,\n        likes: response.likes.length\n      });\n      setLikes({\n        likesNumber: response.likes.length\n      });\n    };\n\n    fetchData(); // fetch(`http://localhost:5000/api/showSong/${songId}`)\n    //     .then(res => res.json())\n    //     .then(res => setData(res))\n    //     // .then(\n    //     //     fetch(`http://localhost:5000/api/showSongsBySinger/singer?singer=Mohi`)\n    //     //         .then(res => res.json())\n    //     //         .then(data2 => (setData2(data2.reverse())), console.log(data2))\n    //     //         .catch(err => console.log(err))\n    //     // )\n    //     .catch(err => console.log(err));\n    // getSingersOtherSongs();\n  }, [songId]);\n\n  const LikeSong = async e => {\n    e.preventDefault();\n    let token = localStorage.getItem('myData');\n    await fetch(`http://localhost:5000/api/like/${songId}`, {\n      method: 'PUT',\n      headers: new Headers({\n        // 'Content-Type': 'text/plain',\n        'auth-token': token\n      }),\n      credentials: \"same-origin\"\n    }).then(res => res.json()).then(res => {\n      res.message ? fetch(`http://localhost:5000/api/unlike/${songId}`, {\n        method: 'PUT',\n        headers: new Headers({\n          // 'Content-Type': 'text/plain',\n          'auth-token': token\n        }),\n        credentials: \"same-origin\"\n      }).then(res => res.json()).then(res => setLikes({\n        likesNumber: res.length\n      })) : setLikes({\n        likesNumber: res.length\n      });\n      return res;\n    }).catch(err => console.error(err));\n  };\n\n  const SubmitComment = async e => {\n    e.preventDefault();\n    let token = localStorage.getItem('myData');\n    await fetch(`http://localhost:5000/api/comment/${songId}`, commentText, {\n      method: 'POST',\n      body: commentText,\n      headers: new Headers({\n        'Content-Type': 'text/plain',\n        'auth-token': token\n      }),\n      credentials: \"same-origin\"\n    }).then(res => res.json());\n  };\n\n  return React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"bg-light mb-5 mt-5 p-md-5 col-lg-6 container \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"text-center pt-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \" \", data3.songName, \" \\u0622\\u0647\\u0646\\u06AF \\u062C\\u062F\\u06CC\\u062F \"), React.createElement(\"p\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \" \", data3.singer, \" \\u0627\\u0632\"), React.createElement(\"img\", {\n    width: \"100%\",\n    src: \"http://localhost:5000/\" + data3.imageURL,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(ReactPlayer, {\n    url: \"http://localhost:5000/\" + data3.songURL,\n    playing: false,\n    controls: true,\n    light: false,\n    height: 40,\n    width: '100%',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    method: \"get\",\n    action: \"http://localhost:5000/\" + data3.songURL,\n    className: \" d-inline-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary m-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"\\u062F\\u0627\\u0646\\u0644\\u0648\\u062F\")), React.createElement(\"p\", {\n    className: \"d-inline-block ml-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, data3.views, \" views\"), console.log(data.comments ? data.comments[0]._id : ''), data.likes ? console.log(data.likes.length) : console.log('ab'), console.log(likes.likesNumber), React.createElement(\"p\", {\n    className: \"d-inline-block ml-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, likes.likesNumber, \" Likes\"), React.createElement(\"i\", {\n    className: \"fas fa-thumbs-up d-inline-block ml-3 btn btn-primary\",\n    onClick: LikeSong,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), error ? React.createElement(\"p\", {\n    className: \"d-inline-block ml-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, error) : '', React.createElement(\"p\", {\n    className: \"d-inline-block ml-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"category: \", data3.category)), React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(OtherSongsFromSinger, {\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  })));\n};\n\nexport default DisplaySongs;","map":{"version":3,"sources":["C:/30/music-app/client/src/components/songs/SingleSong.js"],"names":["React","useState","useEffect","useLocation","ReactPlayer","OtherSongsFromSinger","Link","loggedReducer","DisplaySongs","data","setData","songName","singer","imageURL","songURL","views","likes","data3","setData3","likesNumber","error","setLikes","setEroor","commentText","setCommentText","songId","state","toString","fetchData","console","log","res","fetch","response","json","category","length","LikeSong","e","preventDefault","token","localStorage","getItem","method","headers","Headers","credentials","then","message","catch","err","SubmitComment","body","comments","_id"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,SAAQC,WAAR,QAA0B,cAA1B;AAEA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAO,oBAAP;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;;AAGA,MAAMC,YAAY,GAAG,MAAM;AAAA,oBACCP,QAAQ,CAAC,EAAD,CADT;AAAA;AAAA,QAChBQ,IADgB;AAAA,QACVC,OADU;;AAAA,qBAEGT,QAAQ,CAAC;AAC/BU,IAAAA,QAAQ,EAAE,EADqB;AAE/BC,IAAAA,MAAM,EAAE,EAFuB;AAG/BC,IAAAA,QAAQ,EAAE,EAHqB;AAI/BC,IAAAA,OAAO,EAAE,EAJsB;AAK/BC,IAAAA,KAAK,EAAE,EALwB;AAM/BC,IAAAA,KAAK,EAAE;AANwB,GAAD,CAFX;AAAA;AAAA,QAEhBC,KAFgB;AAAA,QAETC,QAFS;;AAAA,qBAUGjB,QAAQ,CAAC;AAC/BkB,IAAAA,WAAW,EAAE,EADkB;AAE/BC,IAAAA,KAAK,EAAE;AAFwB,GAAD,CAVX;AAAA;AAAA,QAUhBJ,KAVgB;AAAA,QAUTK,QAVS;;AAAA,qBAcGpB,QAAQ,CAAC,EAAD,CAdX;AAAA;AAAA,QAchBmB,KAdgB;AAAA,QAcTE,QAdS;;AAAA,qBAeerB,QAAQ,CAAC,EAAD,CAfvB;AAAA;AAAA,QAehBsB,WAfgB;AAAA,QAeHC,cAfG,mBAgBvB;AACA;AAEA;AACA;;;AACA,QAAMC,MAAM,GAAGtB,WAAW,GAAGuB,KAAd,CAAoBD,MAApB,CAA2BE,QAA3B,EAAf;AAEAzB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM0B,SAAS,GAAG,YAAY;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,UAAIC,GAAG,GAAG,MAAMC,KAAK,CAAE,sCAAqCP,MAAO,EAA9C,CAArB;AACA,UAAIQ,QAAQ,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAArB;AACAxB,MAAAA,OAAO,CAACuB,QAAD,CAAP;AACAf,MAAAA,QAAQ,CAAC;AACLP,QAAAA,QAAQ,EAAEsB,QAAQ,CAACtB,QADd;AAELC,QAAAA,MAAM,EAAEqB,QAAQ,CAACrB,MAFZ;AAGLC,QAAAA,QAAQ,EAAEoB,QAAQ,CAACpB,QAHd;AAILC,QAAAA,OAAO,EAAEmB,QAAQ,CAACnB,OAJb;AAKLqB,QAAAA,QAAQ,EAAEF,QAAQ,CAACE,QALd;AAMLpB,QAAAA,KAAK,EAAEkB,QAAQ,CAAClB,KANX;AAOLC,QAAAA,KAAK,EAAEiB,QAAQ,CAACjB,KAAT,CAAeoB;AAPjB,OAAD,CAAR;AASAf,MAAAA,QAAQ,CAAC;AACLF,QAAAA,WAAW,EAAGc,QAAQ,CAACjB,KAAT,CAAeoB;AADxB,OAAD,CAAR;AAEH,KAhBD;;AAiBAR,IAAAA,SAAS,GAlBG,CAmBZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,GA/BQ,EA+BN,CAACH,MAAD,CA/BM,CAAT;;AAiCA,QAAMY,QAAQ,GAAG,MAAOC,CAAP,IAAa;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAZ;AAEA,UAAMV,KAAK,CAAE,kCAAiCP,MAAO,EAA1C,EAA6C;AACpDkB,MAAAA,MAAM,EAAE,KAD4C;AAEpDC,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACjB;AACA,sBAAaL;AAFI,OAAZ,CAF2C;AAMpDM,MAAAA,WAAW,EAAE;AANuC,KAA7C,CAAL,CAQDC,IARC,CAQIhB,GAAG,IAAIA,GAAG,CAACG,IAAJ,EARX,EASDa,IATC,CASIhB,GAAG,IAAI;AAETA,MAAAA,GAAG,CAACiB,OAAJ,GAGIhB,KAAK,CAAE,oCAAmCP,MAAO,EAA5C,EAA+C;AAChDkB,QAAAA,MAAM,EAAE,KADwC;AAEhDC,QAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACjB;AACA,wBAAaL;AAFI,SAAZ,CAFuC;AAMhDM,QAAAA,WAAW,EAAE;AANmC,OAA/C,CAAL,CAOGC,IAPH,CAOQhB,GAAG,IAAIA,GAAG,CAACG,IAAJ,EAPf,EAO2Ba,IAP3B,CAOgChB,GAAG,IAAIV,QAAQ,CAAC;AAAEF,QAAAA,WAAW,EAAEY,GAAG,CAACK;AAAnB,OAAD,CAP/C,CAHJ,GAcIf,QAAQ,CAAC;AACOF,QAAAA,WAAW,EAAEY,GAAG,CAACK;AADxB,OAAD,CAdZ;AAkBA,aAAOL,GAAP;AACH,KA9BC,EA+BDkB,KA/BC,CA+BKC,GAAG,IAAIrB,OAAO,CAACT,KAAR,CAAc8B,GAAd,CA/BZ,CAAN;AAgCH,GApCD;;AAsCA,QAAMC,aAAa,GAAG,MAAOb,CAAP,IAAa;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAZ;AAEA,UAAMV,KAAK,CAAE,qCAAoCP,MAAO,EAA7C,EAAgDF,WAAhD,EAA6D;AACpEoB,MAAAA,MAAM,EAAE,MAD4D;AAEpES,MAAAA,IAAI,EAAE7B,WAF8D;AAGpEqB,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACjB,wBAAgB,YADC;AAEjB,sBAAaL;AAFI,OAAZ,CAH2D;AAOpEM,MAAAA,WAAW,EAAE;AAPuD,KAA7D,CAAL,CASDC,IATC,CASIhB,GAAG,IAAIA,GAAG,CAACG,IAAJ,EATX,CAAN;AAWH,GAfD;;AAmBA,SACI;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI;AAAK,IAAA,SAAS,EAAC,+CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAkCjB,KAAK,CAACN,QAAxC,wDAFJ,EAGI;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA6BM,KAAK,CAACL,MAAnC,kBAHJ,EAII;AAAK,IAAA,KAAK,EAAC,MAAX;AAAkB,IAAA,GAAG,EAAE,2BAA2BK,KAAK,CAACJ,QAAxD;AAAkE,IAAA,GAAG,EAAC,EAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAMI,oBAAC,WAAD;AACI,IAAA,GAAG,EAAE,2BAA2BI,KAAK,CAACH,OAD1C;AAEI,IAAA,OAAO,EAAE,KAFb;AAGI,IAAA,QAAQ,EAAE,IAHd;AAII,IAAA,KAAK,EAAE,KAJX;AAKI,IAAA,MAAM,EAAE,EALZ;AAMI,IAAA,KAAK,EAAE,MANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAcI;AAAM,IAAA,MAAM,EAAC,KAAb;AAAmB,IAAA,MAAM,EAAE,2BAA2BG,KAAK,CAACH,OAA5D;AAAqE,IAAA,SAAS,EAAC,iBAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,qBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADJ,CAdJ,EAmBI;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCG,KAAK,CAACF,KAA1C,WAnBJ,EAoBKc,OAAO,CAACC,GAAR,CAAYrB,IAAI,CAAC4C,QAAL,GAAgB5C,IAAI,CAAC4C,QAAL,CAAc,CAAd,EAAiBC,GAAjC,GAAuC,EAAnD,CApBL,EAqBK7C,IAAI,CAACO,KAAL,GAAaa,OAAO,CAACC,GAAR,CAAYrB,IAAI,CAACO,KAAL,CAAWoB,MAAvB,CAAb,GAA4CP,OAAO,CAACC,GAAR,CAAY,IAAZ,CArBjD,EAuBKD,OAAO,CAACC,GAAR,CAAYd,KAAK,CAACG,WAAlB,CAvBL,EAwBI;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCH,KAAK,CAACG,WAA1C,WAxBJ,EA0BI;AAAG,IAAA,SAAS,EAAC,sDAAb;AAAoE,IAAA,OAAO,EAAEkB,QAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BJ,EA4BKjB,KAAK,GAAG;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCA,KAApC,CAAH,GAAoD,EA5B9D,EA8BI;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA8CH,KAAK,CAACkB,QAApD,CA9BJ,CAHJ,EAuCI;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,oBAAD;AAAsB,IAAA,IAAI,EAAE1B,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAvCJ,CADJ;AAyDH,CA1KD;;AA4KA,eAAeD,YAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\nimport {useLocation} from 'react-router';\r\n\r\nimport ReactPlayer from 'react-player';\r\nimport './DisplaySongs.css';\r\nimport OtherSongsFromSinger from \"./OtherSongsFromSinger\";\r\nimport {Link} from \"react-router-dom\";\r\nimport loggedReducer from \"../../reducers/isSigned\";\r\n\r\n\r\nconst DisplaySongs = () => {\r\n    const [data, setData] = useState([]);\r\n    const [data3, setData3] = useState({\r\n        songName: '',\r\n        singer: '',\r\n        imageURL: '',\r\n        songURL: '',\r\n        views: '',\r\n        likes: ''\r\n    });\r\n    const [likes, setLikes] = useState({\r\n        likesNumber: '',\r\n        error: ''\r\n    })\r\n    const [error, setEroor] = useState('')\r\n    const [commentText, setCommentText] = useState('')\r\n    // const [data2, setData2] = useState([]);\r\n    // const [loading, setLoading] = useState(true)\r\n\r\n    // let location = useLocation();\r\n    // console.log(location.state.songId);\r\n    const songId = useLocation().state.songId.toString();\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            console.log('async fetch data1')\r\n            let res = await fetch(`http://localhost:5000/api/showSong/${songId}`);\r\n            let response = await res.json();\r\n            setData(response);\r\n            setData3({\r\n                songName: response.songName,\r\n                singer: response.singer,\r\n                imageURL: response.imageURL,\r\n                songURL: response.songURL,\r\n                category: response.category,\r\n                views: response.views,\r\n                likes: response.likes.length\r\n            })\r\n            setLikes({\r\n                likesNumber : response.likes.length})\r\n        };\r\n        fetchData();\r\n        // fetch(`http://localhost:5000/api/showSong/${songId}`)\r\n        //     .then(res => res.json())\r\n        //     .then(res => setData(res))\r\n        //     // .then(\r\n        //     //     fetch(`http://localhost:5000/api/showSongsBySinger/singer?singer=Mohi`)\r\n        //     //         .then(res => res.json())\r\n        //     //         .then(data2 => (setData2(data2.reverse())), console.log(data2))\r\n        //     //         .catch(err => console.log(err))\r\n        //     // )\r\n        //     .catch(err => console.log(err));\r\n        // getSingersOtherSongs();\r\n\r\n    }, [songId]);\r\n\r\n    const LikeSong = async (e) => {\r\n        e.preventDefault()\r\n        let token = localStorage.getItem('myData');\r\n\r\n        await fetch(`http://localhost:5000/api/like/${songId}`, {\r\n            method: 'PUT',\r\n            headers: new Headers({\r\n                // 'Content-Type': 'text/plain',\r\n                'auth-token':token\r\n            }),\r\n            credentials: \"same-origin\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n\r\n                res.message\r\n                    ?\r\n\r\n                    fetch(`http://localhost:5000/api/unlike/${songId}`, {\r\n                        method: 'PUT',\r\n                        headers: new Headers({\r\n                            // 'Content-Type': 'text/plain',\r\n                            'auth-token':token\r\n                        }),\r\n                        credentials: \"same-origin\"\r\n                    }).then(res => res.json()).then(res => setLikes({ likesNumber: res.length }))\r\n\r\n\r\n                    :\r\n                    setLikes({\r\n                                    likesNumber: res.length\r\n                                });\r\n\r\n                return res\r\n            })\r\n            .catch(err => console.error(err))\r\n    };\r\n\r\n    const SubmitComment = async (e) => {\r\n        e.preventDefault()\r\n        let token = localStorage.getItem('myData');\r\n\r\n        await fetch(`http://localhost:5000/api/comment/${songId}`, commentText, {\r\n            method: 'POST',\r\n            body: commentText,\r\n            headers: new Headers({\r\n                'Content-Type': 'text/plain',\r\n                'auth-token':token\r\n            }),\r\n            credentials: \"same-origin\"\r\n        })\r\n            .then(res => res.json())\r\n\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"\">\r\n\r\n\r\n            <div className=\"bg-light mb-5 mt-5 p-md-5 col-lg-6 container \">\r\n\r\n                <p className=\"text-center pt-2\"> {data3.songName} آهنگ جدید </p>\r\n                <p className=\"text-center\"> {data3.singer} از</p>\r\n                <img width=\"100%\" src={\"http://localhost:5000/\" + data3.imageURL} alt=\"\"/>\r\n\r\n                <ReactPlayer\r\n                    url={\"http://localhost:5000/\" + data3.songURL}\r\n                    playing={false}\r\n                    controls={true}\r\n                    light={false}\r\n                    height={40}\r\n                    width={'100%'}\r\n                />\r\n                <form method=\"get\" action={\"http://localhost:5000/\" + data3.songURL} className=\" d-inline-block\">\r\n                    <button type=\"submit\" className=\"btn btn-primary m-1\">\r\n                        دانلود\r\n                    </button>\r\n                </form>\r\n                <p className=\"d-inline-block ml-3\">{data3.views} views</p>\r\n                {console.log(data.comments ? data.comments[0]._id : '')}\r\n                {data.likes ? console.log(data.likes.length):console.log('ab')}\r\n                {/*<p className=\"d-inline-block ml-3\">{data.likes ? data.likes.length : ''} Likes</p>*/}\r\n                {console.log(likes.likesNumber)}\r\n                <p className=\"d-inline-block ml-3\">{likes.likesNumber} Likes</p>\r\n                {/*<button onClick={LikeSong} className=\" d-inline-block ml-3\">*/}\r\n                <i className=\"fas fa-thumbs-up d-inline-block ml-3 btn btn-primary\" onClick={LikeSong}></i>\r\n                {/*</button>*/}\r\n                {error ? <p className=\"d-inline-block ml-3\">{error}</p> : '' }\r\n\r\n                <p className=\"d-inline-block ml-3\">category: {data3.category}</p>\r\n\r\n\r\n\r\n            </div>\r\n\r\n            <div className=\"\">\r\n\r\n                <OtherSongsFromSinger data={data}/>\r\n\r\n                {/*{data2.map((item, i) =>*/}\r\n                {/*    <div key={i} >*/}\r\n                {/*        <img src={\"http://localhost:5000/\"+item.imageURL} alt={item.songName}  className=\"songImage\"/>*/}\r\n                {/*        <div className=\" text-center d-block\">*/}\r\n                {/*            <h5>{item.songName}</h5>*/}\r\n                {/*            <p>{item.singer}</p>*/}\r\n                {/*        </div>*/}\r\n                {/*    </div>*/}\r\n                {/*)}*/}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DisplaySongs;"]},"metadata":{},"sourceType":"module"}